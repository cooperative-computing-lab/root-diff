#!/bin/sh

fn_size=0
entry_content="none"
gnuplot_fn="none"
fn_path="none"
fn_scale="none"
dat_fn="none"
oup_fn="none"

# Initialize variables
init_argv()
{   
    fn_path=$1
    base_name=${1##*/} 
    dat_fn="${base_name}.dat"
    fn_scale=$2
    gnuplot_fn="$base_name.gnuplot"
    oup_fn="$base_name.eps"
}

# Generate entry for .data file using same size scale
unify_data()
{

    size=$(echo $1 | awk -F ' ' '{print $1}')
    fname=$(echo $1 | awk -F ' ' '{print $2}')
    size_num=$(echo $size | sed 's/.$//')

    if [ "$scale" != $2 ]
    then

        if [ "$scale" = "K" ]
        then
            if [ "$2" = "M" ]
            then
                size_num=$(echo "$size_num 1000" | awk '{printf "%0.4f", $1 / $2}')
            else
                size_num=$(echo "$size_num 1000000" | awk '{printf "%0.6f", $1 / $2}')
            fi
        fi

        if [ "$scale" = "M" ]
        then
            if [ "$2" = "K" ]
            then
                size_num=$(echo "$size_num 1000" | awk '{printf "%d", $1 * $2}')
            else
                size_num=$(echo "$size_num 1000" | awk '{printf "%0.6f", $1 / $2}')
            fi
        fi

        if [ "$scale" = "G" ]
        then
            if [ "$2" = "K" ]
            then
                size_num=$(echo "$size_num 1000000" | awk '{printf "%d", $1 * $2}')
            else
                size_num=$(echo "$size_num 1000" | awk '{printf "%d", $1 * $2}')
            fi
        fi

    fi

    entry_content="$size_num $fname"

}

#Generate .data file for gnuplot
gen_data_fn()
{

    # If .data file exist, remove it
    if [ -f $dat_fn ]
    then
        rm $dat_fn
    fi 

    # Write first entry to the .data file
    echo "# size/$fn_scale fname real user sys" >> $dat_fn

    for f in $fn_path/*.root
    do
        # Get file size and file path
        fn_info=$(ls -lh $f | awk -F ' ' '{print $5" "$9}')
        unify_data "$fn_info" $fn_scale

        # Call root_diff 
        run_time=$(/usr/bin/time -p /afs/crc.nd.edu/user/c/czheng2/Work/ccl_work/root_diff/bin/root_diff -m CC $f $f 2>&1 >/dev/null | tail -n3)
        # Get the value of "real, user, sys" 
        run_time_data=$(echo $run_time | awk -F ' ' '{print $2" "$4" "$6}')
        # Each entry of .data file content the file information and the running time of root_diff
        data_entry="$entry_content $run_time_data"
        echo $data_entry >> $dat_fn
    done

}

# Generate .gnuplot
gen_gnuplot()
{
    # Get the max time elapse
    max_time=$(sort -k 4 $dat_fn | tail -2 | head -1 | awk -F ' ' '{print$3}')
    max_int_time=$(printf "%.*f\n" 0 $max_time)

    if [ -f $gnuplot_fn ]
    then
        rm $gnuplot_fn
    fi

    echo -e "set output \"$oup_fn\"
set terminal postscript eps enhanced
set title \"Root diff on $base_name\"
set xlabel \"Size/$fn_scale\"
set ylabel \"Time/S\"
set yrange [0:$((max_int_time + 1))]
unset key
plot \"$dat_fn\" using 1:3" >> $gnuplot_fn

}

# gnuplot
plot()
{
    
    gnuplot $gnuplot_fn

}

main()
{

    init_argv $1 $2
    gen_data_fn 
    gen_gnuplot 
    plot

}

main $1 $2
